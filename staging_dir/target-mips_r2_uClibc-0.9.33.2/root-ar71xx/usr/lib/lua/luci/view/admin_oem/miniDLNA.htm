<%+header%>


<script>
	$(function($)
	{
		uiPageInit();
	});

	/* Global */
	var G_SDK_SERVER_STATE_DISABLE = 0;
	var G_SDK_SERVER_STATE_ENABLE = 1;

	var G_SDK_SERVICES_TYPE_SAMBA = 0;
	var G_SDK_SERVICES_TYPE_DLNA = 1;
	var G_SDK_SERVICES_TYPE_FTP = 2;

	var G_SDK_DevType_MM100 = 0;
	var G_SDK_DevType_USBDEVICE = 1;

	var dlnaState;
	var dlna_devtype;
	var externalStorageDeviceState;
	var baseHref_all = "<%=REQUEST_URI%>";

	function uiPageInit()
	{
		initGlobleParam();
		formload();

		var $dlnaState = $("#dlna_State").show(0);
		showSwitchStatus($dlnaState, dlnaState, G_SDK_SERVER_STATE_ENABLE);
		$("#set_btnCancel,#set_btnApply").setBtnDisabled();
		$("#set_btnCancel").click(function()
		{
			location.href = baseHref_all;
		});
		$("#set_btnApply").click(dlnaApply);

		$("#dlna-map input[type='radio']").bind("input change keyup keydown paste", function()
		{
			$("#set_btnCancel,#set_btnApply").removeBtnDisabled();
		});

		$("input[name=dlnaStorage][value=" + dlna_devtype + "]").attr("checked", true);

		if (externalStorageDeviceState == 1)
		{
			$("#dlna-map input[name=dlnaStorage][value=0]").attr("checked", true);
			$("#dlna-map input[name=dlnaStorage][value=1]").attr("disabled", true);
		} else if (externalStorageDeviceState == 2)
		{
			$("#dlna-map input[name=dlnaStorage][value=1]").attr("checked", true);
			$("#dlna-map input[name=dlnaStorage][value=0]").attr("disabled", true);
		} else if (externalStorageDeviceState == 0)
		{
			$("#dlna-map input").attr("disabled", true);
			$("#dlna-map input[name=dlnaStorage]").attr("checked", false);
			//$(".control-group").hide();
		}

		
		if (dlnaState == 1)
		{
			$("#dlna_content").show();
		}
	}
	function initGlobleParam()
	{
		dlnaState = 0;
		dlna_devtype = 0;
		externalStorageDeviceState = 0;
	}

	function formload()
	{
		dlnaInfo = SDK.Services.GetServiceState(G_SDK_SERVICES_TYPE_DLNA);
		if (!dlnaInfo.hasOwnProperty("error"))
		{
			dlnaState = dlnaInfo.result.State || 0;
		}
		var externalDeviceInfo = SDK.System.GetExternalStorageDevice();
		if (externalDeviceInfo != null && !externalDeviceInfo.hasOwnProperty("error"))
		{
			var externalDeviceList = externalDeviceInfo.DeviceList;
			var deviceCount = externalDeviceList.length;
			if (deviceCount == 2)
			{
				externalStorageDeviceState = 3;
			} else if (deviceCount == 1)
			{
				var devtype = externalDeviceList[0].DevType;
				if (devtype == 0)
				{
					externalStorageDeviceState = 1;
				} else if (devtype == 1)
				{
					externalStorageDeviceState = 2;
				}
			} else
			{
				externalStorageDeviceState = 0;
			}
		}
		var dlnaConfigInfo = SDK.Services.GetDLNASettings();
		if (!dlnaConfigInfo.hasOwnProperty("error"))
		{
			dlna_devtype = dlnaConfigInfo.result.DevType || 0;
		}
	}

	function dlnaApply()
	{
		var params = {
			"ServiceType" : G_SDK_SERVICES_TYPE_DLNA,
			"State" : $("#dlna_State").is(":checked") ? 1 : 0
		};
		var params_detail = {
			"DevType" : parseInt($("input[name='dlnaStorage']:checked").val())
		};

		var result_one = SDK.Services.SetServiceState(params.ServiceType, params.State).error;
		if (result_one == API_RESULT_SUCCESS)
		{
			var result = 0;
			if (externalStorageDeviceState != 0)
			{
				result = SDK.Services.SetDLNASettings(params_detail.DevType).error;
			} else
			{
				result = 0;
			}
			if (result == API_RESULT_SUCCESS)
			{
				sys.alert("<%:ids_succeeded%>", function()
				{
					location.href = baseHref_all;
				});
			} else
			{
				sys.alert("<%:ids_failed%>", function()
				{
					$("#set_btnApply,#set_btnCancel").setBtnDisabled();
				});
			}

		} else
		{
			sys.alert("<%:ids_failed%>", function()
			{
				$("#set_btnApply,#set_btnCancel").setBtnDisabled();
			});
		}
	}
	/* Util */
	function showSwitchStatus($CheckedState, InitStateValue, STATE_ENABLE)
	{
		var CheckedState = $CheckedState.is(":checked");
		var $hasSwitch = $CheckedState.parent();
		$hasSwitch.addClass("has-switch");
		if (InitStateValue == STATE_ENABLE)
		{
			CheckedState = true;
		} else
		{
			CheckedState = false;
		}
		if (CheckedState == true)
		{
			$hasSwitch.removeClass("switch-off").addClass("switch-on");
			$CheckedState.attr("checked", true);
		} else
		{
			$hasSwitch.removeClass("switch-on").addClass("switch-off");
			$CheckedState.attr("checked", false);
		}
		$hasSwitch.click(function()
		{
			var $divPart = $hasSwitch.parent().parent();
			$divPart.find("button").removeBtnDisabled();
			$divPart.find(".border-notop").show();
			if (CheckedState == true)
			{
				$hasSwitch.removeClass("switch-on").addClass("switch-off");
				CheckedState = false;
				$CheckedState.attr("checked", false);
			} else
			{
				$hasSwitch.removeClass("switch-off").addClass("switch-on");
				CheckedState = true;
				$CheckedState.attr("checked", true);
			}
		});
	}
</script>

<div id="dlna_page_map" class="main-box border-notop form-horizontal">
	<div class="cbi-map">
		<div id="dlna-map" class="mb20">
			<div class="title-switch-checkbox border-all">
				<h4 class="pull-left"><%:ids_samba_menuDlna%></h4>
				<div class="switch-checkbox-right">
					<input id="dlna_State" name="dlna-status-value" type="checkbox" style="display:none;"/>
				</div>
			</div>
			<div class="border-notop hidden" id="dlna_content">
				<div class="control-group">
					<label class="control-label"><%:ids_samba_defautStorage%>:</label>
					<div class="controls">
						<label class="radio inline"> <input type="radio" name="dlnaStorage" value="0" checked="checked" /><%:ids_samba_storageMm100%>
						</label> <label class="radio inline"> <input type="radio" name="dlnaStorage" value="1" /><%:ids_samba_storageUsb%>
						</label>
					</div>
				</div>
				<div class="text-center">
					<button class="btn btn-primary" id="set_btnApply"><%:ids_apply%></button>
					<button class="btn btn-primary" id="set_btnCancel"><%:ids_cancel%></button>
				</div>
			</div>
		</div>
	</div>
</div>
<%+footer%>
